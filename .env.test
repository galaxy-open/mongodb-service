# Test environment configuration
# This file can be safely committed as it contains only test/mock values

# Application
APP_KEY='test_key_32_chars_minimum_required'
APP_NAME='MongoDB Service Test'
APP_URL='localhost:3333'
NODE_ENV='test'
HOST='localhost'
PORT='3333'
TZ='UTC'
LOG_LEVEL='info'

# AWS (Mock values for testing)
AWS_ACCESS_KEY_ID='test-access-key-id'
AWS_REGION='us-east-1'
AWS_SECRET_ACCESS_KEY='test-secret-access-key'
AWS_ROUTE53_ZONE_ID='Z000000000000'

# Database (Test database - must match docker-compose.dev.yml)
DB_DATABASE='test'
DB_HOST='127.0.0.1'
DB_PASSWORD='postgres'
DB_PORT='5432'
DB_USER='postgres'

# Redis (Test cache)
REDIS_HOST='127.0.0.1'
REDIS_PORT='6379'
REDIS_QUEUE='test_queue'

# Session & Stores
SESSION_DRIVER='memory'
LIMITER_STORE='memory'
LOCK_STORE='memory'
DRIVE_DISK='fs'

# OAuth (Test values)
OAUTH_CLIENT_ID='test-client-id'
OAUTH_CLIENT_SECRET_HASH='test-client-secret-hash'
OAUTH_REDIRECT_URI='http://localhost:4000/api/oauth/callback'

# Trusted Identity Provider (Test values)
TIP_NAME='test-identity-provider'
TIP_ISSUER_URL='http://localhost:4000'
TIP_EXPECTED_AUDIENCE='test-audience'
TIP_JWKS_URI='http://localhost:4000/api/.well-known/jwks.json'

# Email (Test values)
RESEND_API_KEY='test-resend-api-key'

# Monitoring (Test values)
MONITORING_SECRET='test-monitoring-secret'
PROMETHEUS_URL='http://localhost:9090/api/v1'
PROMETHEUS_USERNAME='test_user'
PROMETHEUS_PASSWORD='test_password'
AXIOM_API_URL='https://api.axiom.co/v1/datasets/test'
AXIOM_TOKEN='test-axiom-token'
LOG_DATASET_PREFIX='test-mongodb-service'

# Docker Swarm (Test certificates - these are dummy values)
DOCKER_SWARM_MANAGER_HOST_URL='tcp://localhost:2376'
# For testing, use mock certificate values (single line)
DOCKER_SWARM_MANAGER_CA='-----BEGIN CERTIFICATE-----TEST_CA_CERT-----END CERTIFICATE-----'
DOCKER_SWARM_MANAGER_CERT='-----BEGIN CERTIFICATE-----TEST_CLIENT_CERT-----END CERTIFICATE-----'
DOCKER_SWARM_MANAGER_KEY='-----BEGIN RSA PRIVATE KEY-----TEST_PRIVATE_KEY-----END RSA PRIVATE KEY-----'

# DNS & Domain
BASE_DOMAIN='test.local'
ENVIRONMENT='test'
DNS_RECORD_TTL='300'

# Certificate Generation
CERTIFICATE_CA_KEY_SIZE='2048'
CERTIFICATE_COUNTRY='US'
CERTIFICATE_ORGANIZATION='Test Organization'
CERTIFICATE_VALIDITY_DAYS='365'

# S3 (Test values)
S3_BUCKET='test-bucket'

# Fluentd (Test values)
FLUENTD_ADDRESS='localhost:24224'